// Code generated by goctl. DO NOT EDIT.
// Source: session.proto

package server

import (
	"context"

	"im2/service/session/internal/logic"
	"im2/service/session/internal/svc"
	"im2/service/session/session"
)

type SessionServer struct {
	svcCtx *svc.ServiceContext
	session.UnimplementedSessionServer
}

func NewSessionServer(svcCtx *svc.ServiceContext) *SessionServer {
	return &SessionServer{
		svcCtx: svcCtx,
	}
}

func (s *SessionServer) CreateSession(ctx context.Context, in *session.CreateSessionRequest) (*session.CreateSessionResponse, error) {
	l := logic.NewCreateSessionLogic(ctx, s.svcCtx)
	return l.CreateSession(in)
}

func (s *SessionServer) CloseSession(ctx context.Context, in *session.CloseSessionRequest) (*session.CloseSessionResponse, error) {
	l := logic.NewCloseSessionLogic(ctx, s.svcCtx)
	return l.CloseSession(in)
}

func (s *SessionServer) GetSession(ctx context.Context, in *session.GetSessionRequest) (*session.SessionInfo, error) {
	l := logic.NewGetSessionLogic(ctx, s.svcCtx)
	return l.GetSession(in)
}
