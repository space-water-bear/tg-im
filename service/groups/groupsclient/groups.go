// Code generated by goctl. DO NOT EDIT.
// Source: groups.proto

package groupsclient

import (
	"context"

	"im2/service/groups/groups"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddGroupMemberRequest     = groups.AddGroupMemberRequest
	AddGroupMemberResponse    = groups.AddGroupMemberResponse
	CreateGroupRequest        = groups.CreateGroupRequest
	CreateGroupResponse       = groups.CreateGroupResponse
	ListGroupMembersRequest   = groups.ListGroupMembersRequest
	ListGroupMembersResponse  = groups.ListGroupMembersResponse
	RemoveGroupMemberRequest  = groups.RemoveGroupMemberRequest
	RemoveGroupMemberResponse = groups.RemoveGroupMemberResponse

	Groups interface {
		CreateGroup(ctx context.Context, in *CreateGroupRequest, opts ...grpc.CallOption) (*CreateGroupResponse, error)
		AddGroupMember(ctx context.Context, in *AddGroupMemberRequest, opts ...grpc.CallOption) (*AddGroupMemberResponse, error)
		RemoveGroupMember(ctx context.Context, in *RemoveGroupMemberRequest, opts ...grpc.CallOption) (*RemoveGroupMemberResponse, error)
		ListGroupMembers(ctx context.Context, in *ListGroupMembersRequest, opts ...grpc.CallOption) (*ListGroupMembersResponse, error)
	}

	defaultGroups struct {
		cli zrpc.Client
	}
)

func NewGroups(cli zrpc.Client) Groups {
	return &defaultGroups{
		cli: cli,
	}
}

func (m *defaultGroups) CreateGroup(ctx context.Context, in *CreateGroupRequest, opts ...grpc.CallOption) (*CreateGroupResponse, error) {
	client := groups.NewGroupsClient(m.cli.Conn())
	return client.CreateGroup(ctx, in, opts...)
}

func (m *defaultGroups) AddGroupMember(ctx context.Context, in *AddGroupMemberRequest, opts ...grpc.CallOption) (*AddGroupMemberResponse, error) {
	client := groups.NewGroupsClient(m.cli.Conn())
	return client.AddGroupMember(ctx, in, opts...)
}

func (m *defaultGroups) RemoveGroupMember(ctx context.Context, in *RemoveGroupMemberRequest, opts ...grpc.CallOption) (*RemoveGroupMemberResponse, error) {
	client := groups.NewGroupsClient(m.cli.Conn())
	return client.RemoveGroupMember(ctx, in, opts...)
}

func (m *defaultGroups) ListGroupMembers(ctx context.Context, in *ListGroupMembersRequest, opts ...grpc.CallOption) (*ListGroupMembersResponse, error) {
	client := groups.NewGroupsClient(m.cli.Conn())
	return client.ListGroupMembers(ctx, in, opts...)
}
