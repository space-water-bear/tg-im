// Code generated by goctl. DO NOT EDIT.
// Source: friends.proto

package server

import (
	"context"

	"im2/service/friends/friends"
	"im2/service/friends/internal/logic"
	"im2/service/friends/internal/svc"
)

type FriendsServer struct {
	svcCtx *svc.ServiceContext
	friends.UnimplementedFriendsServer
}

func NewFriendsServer(svcCtx *svc.ServiceContext) *FriendsServer {
	return &FriendsServer{
		svcCtx: svcCtx,
	}
}

func (s *FriendsServer) GetFriendsList(ctx context.Context, in *friends.GetFriendsListRequest) (*friends.GetFriendsListResponse, error) {
	l := logic.NewGetFriendsListLogic(ctx, s.svcCtx)
	return l.GetFriendsList(in)
}

func (s *FriendsServer) GetFriend(ctx context.Context, in *friends.GetFriendRequest) (*friends.GetFriendResponse, error) {
	l := logic.NewGetFriendLogic(ctx, s.svcCtx)
	return l.GetFriend(in)
}

func (s *FriendsServer) AddFriend(ctx context.Context, in *friends.AddFriendRequest) (*friends.AddFriendResponse, error) {
	l := logic.NewAddFriendLogic(ctx, s.svcCtx)
	return l.AddFriend(in)
}

func (s *FriendsServer) UpdateFriend(ctx context.Context, in *friends.UpdateFriendRequest) (*friends.UpdateFriendResponse, error) {
	l := logic.NewUpdateFriendLogic(ctx, s.svcCtx)
	return l.UpdateFriend(in)
}

func (s *FriendsServer) RemoveFriend(ctx context.Context, in *friends.RemoveFriendRequest) (*friends.RemoveFriendResponse, error) {
	l := logic.NewRemoveFriendLogic(ctx, s.svcCtx)
	return l.RemoveFriend(in)
}
