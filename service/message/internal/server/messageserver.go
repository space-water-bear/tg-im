// Code generated by goctl. DO NOT EDIT.
// Source: message.proto

package server

import (
	"context"

	"im2/service/message/internal/logic"
	"im2/service/message/internal/svc"
	"im2/service/message/message"
)

type MessageServer struct {
	svcCtx *svc.ServiceContext
	message.UnimplementedMessageServer
}

func NewMessageServer(svcCtx *svc.ServiceContext) *MessageServer {
	return &MessageServer{
		svcCtx: svcCtx,
	}
}

func (s *MessageServer) SendMessage(ctx context.Context, in *message.SendMessageRequest) (*message.SendMessageResponse, error) {
	l := logic.NewSendMessageLogic(ctx, s.svcCtx)
	return l.SendMessage(in)
}

func (s *MessageServer) ReceiveMessage(in *message.ReceiveMessageRequest, stream message.Message_ReceiveMessageServer) error {
	l := logic.NewReceiveMessageLogic(stream.Context(), s.svcCtx)
	return l.ReceiveMessage(in, stream)
}
