// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userclient

import (
	"context"

	"im2/service/user/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeleteInfoRequest  = user.DeleteInfoRequest
	DeleteInfoResponse = user.DeleteInfoResponse
	GetInfoRequest     = user.GetInfoRequest
	GetInfoResponse    = user.GetInfoResponse
	GetListRequest     = user.GetListRequest
	GetListResponse    = user.GetListResponse
	LoginRequest       = user.LoginRequest
	LoginResponse      = user.LoginResponse
	RegisterRequest    = user.RegisterRequest
	RegisterResponse   = user.RegisterResponse
	UpdateInfoRequest  = user.UpdateInfoRequest
	UpdateInfoResponse = user.UpdateInfoResponse

	User interface {
		Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
		GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error)
		UpdateInfo(ctx context.Context, in *UpdateInfoRequest, opts ...grpc.CallOption) (*UpdateInfoResponse, error)
		DeleteInfo(ctx context.Context, in *DeleteInfoRequest, opts ...grpc.CallOption) (*DeleteInfoResponse, error)
		GetList(ctx context.Context, in *GetListRequest, opts ...grpc.CallOption) (*GetListResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUser) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUser) GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetInfo(ctx, in, opts...)
}

func (m *defaultUser) UpdateInfo(ctx context.Context, in *UpdateInfoRequest, opts ...grpc.CallOption) (*UpdateInfoResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.UpdateInfo(ctx, in, opts...)
}

func (m *defaultUser) DeleteInfo(ctx context.Context, in *DeleteInfoRequest, opts ...grpc.CallOption) (*DeleteInfoResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.DeleteInfo(ctx, in, opts...)
}

func (m *defaultUser) GetList(ctx context.Context, in *GetListRequest, opts ...grpc.CallOption) (*GetListResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetList(ctx, in, opts...)
}
