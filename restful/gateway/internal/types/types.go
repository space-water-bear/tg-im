// Code generated by goctl. DO NOT EDIT.
package types

type AddFriendRequest struct {
	FriendId int64 `json:"friendId"`
}

type AddFriendResponse struct {
	Success bool `json:"success"`
}

type AddGroupRequest struct {
	GroupId int64  `json:"groupId"`
	Name    string `json:"name"`
}

type AddGroupResponse struct {
	Success bool `json:"success"`
}

type AddUserRequest struct {
	Username string `json:"username"`
	Password string `json:"password"`
	Email    string `json:"email"`
}

type AddUserResponse struct {
	UserId int64 `json:"userId"`
}

type DeleteFriendRequest struct {
	FriendId int64 `json:"friendId"`
}

type DeleteGroupRequest struct {
	GroupId int64 `json:"groupId"`
}

type DeleteUserRequest struct {
	UserId int64 `json:"userId"`
}

type DeleteUserResponse struct {
	Success bool `json:"success"`
}

type FriendDeleteResponse struct {
	Success bool `json:"success"`
}

type FriendInfoResponse struct {
	FriendId int64  `json:"friendId"`
	Nickname string `json:"nickname"`
}

type FriendListResponse struct {
	Friends []FriendInfoResponse `json:"friends"`
}

type GroupDeleteResponse struct {
	Success bool `json:"success"`
}

type GroupInfoResponse struct {
	GroupId int64  `json:"groupId"`
	Name    string `json:"name"`
}

type GroupListResponse struct {
	Groups []GroupInfoResponse `json:"groups"`
}

type LoginRequest struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type LoginResponse struct {
	UserId int64  `json:"userId"`
	Token  string `json:"token"`
}

type RegisterRequest struct {
	Username string `json:"username"`
	Password string `json:"password"`
	Email    string `json:"email"`
}

type RegisterResponse struct {
	Success bool `json:"success"`
}

type UpdateGroupRequest struct {
	GroupId int64  `json:"groupId"`
	Name    string `json:"name"`
}

type UpdateGroupResponse struct {
	Success bool `json:"success"`
}

type UpdateUserInfoRequest struct {
	UserId   int64  `json:"userId"`
	Username string `json:"username,omitempty"`
	Email    string `json:"email,omitempty"`
}

type UpdateUserResponse struct {
	Success bool `json:"success"`
}

type UserInfoResponse struct {
	UserId   int64  `json:"userId"`
	Username string `json:"username"`
	NickName string `json:"nickName"`
}

type UserListResponse struct {
	Users []UserInfoResponse `json:"users"`
}
